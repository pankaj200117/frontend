name: Deploy Node.js Application

on:
  push:
    branches:
      - main  # Adjust this if you want to deploy from a different branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'  # Adjust Node.js version if needed

    - name: Setup SSH with PEM Key
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa.pem
        chmod 600 ~/.ssh/id_rsa.pem
        echo -e "Host *\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Verify SSH Connection
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa.pem -vvv ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "echo 'SSH Connection Successful'"
      env:
        SERVER_USER: ${{ secrets.SERVER_USER }}
        SERVER_HOST: ${{ secrets.SERVER_HOST }}

    - name: Deploy to server
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa.pem -vvv ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
          set -x  # Enable command tracing
          mkdir -p /home/ubuntu/frontend
          cd /home/ubuntu/frontend || { echo "Directory change failed"; exit 1; }
          git pull origin main || { echo "Git pull failed"; exit 1; }
          rm -rf node_modules package-lock.json  # Optional: Clean npm environment
          npm install || { echo "npm install failed"; exit 1; }
          npm run build || { echo "npm build failed"; exit 1; }
          pm2 start npm --name "react-app" -- start || { echo "PM2 start failed"; exit 1; }
        EOF
      env:
        SERVER_USER: ${{ secrets.SERVER_USER }}
        SERVER_HOST: ${{ secrets.SERVER_HOST }}
